<Window x:Class="WpfApp_HomeWork15.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp_HomeWork15"
        mc:Ignorable="d"
        Title="MainWindow" Height="868" Width="615">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <FlowDocumentScrollViewer Name="flowDocumentScrollViewer">
            <FlowDocument>
                <Paragraph>
                    <Bold>Windows Presentation Foundation</Bold>
                    <Hyperlink NavigateUri="https://ru.wikipedia.org/wiki/Windows_Presentation_Foundation">(wiki)</Hyperlink>
                </Paragraph>
                <Paragraph>

                    — аналог
                    <Italic>WinForms</Italic> , система для построения клиентских приложений Windows с визуально привлекательными возможностями взаимодействия с пользователем, графическая (презентационная) подсистема в составе .NET Framework (начиная с версии 3.0), использующая язык XAML
                    <Floater Width="270"  HorizontalAlignment="Right">
                        <BlockUIContainer>
                            <StackPanel>
                                <Image Source="Data\350px-Dotnet_3.5.png"/>
                                <Label Content="WPF в составе .NET Framework"/>
                            </StackPanel>
                        </BlockUIContainer>
                    </Floater>
                </Paragraph>
                <Paragraph>
                    <Bold>Версии</Bold>
                </Paragraph>
                <List MarkerStyle="Box">
                    <ListItem>
                        <Paragraph>
                            WPF 3.0 (Ноябрь 2006)
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            WPF 3.5 (Ноябрь 2007)
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            WPF 3.5 SP1 (Август 2008)
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            WPF 4 (Апрель 2010)
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            WPF 4.5 (Август 2012)
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            WPF 4.5.1 (Октябрь 2013)
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            WPF 4.5.2 (Май 2014)
                        </Paragraph>
                    </ListItem>
                    <ListItem>
                        <Paragraph>
                            WPF 4.6 (Июль 2015)
                        </Paragraph>
                    </ListItem>
                </List>

                <Paragraph>
                    <Bold>
                        <Underline>Привязка данных</Underline>
                    </Bold>
                </Paragraph>

                <Paragraph>
                    <Span Background="AliceBlue">
                        Это
                        <Underline>гибкий</Underline> механизм, который позволяет через расширения разметки XAML
                        <Run Foreground="Red">
                            связывать различные данные</Run>
                    </Span>
                    (от значений свойств элементов управления до общедоступных свойств, реализующих поля базы данных через Entity Framework). Привязка данных представлена классом Binding, который в свою очередь унаследован от MarkupExtension, что позволяет использовать привязки не только в коде, но и в разметке
                </Paragraph>

                <Paragraph>Помимо основного класса Binding в WPF реализовано еще несколько механизмов привязок:</Paragraph>
                <Section FontSize="14">
                    <Table>
                        <Table.Columns>
                            <TableColumn Width="130"/>
                            <TableColumn Width="Auto"/>
                        </Table.Columns>
                        <TableRowGroup>
                            <TableRow>
                                <TableCell>
                                    <Paragraph>
                                        MultiBinding
                                    </Paragraph>
                                </TableCell>
                                <TableCell>
                                    <Paragraph>
                                        позволяет создавать множественные привязки, указывая несколько элементов
                                    </Paragraph>
                                </TableCell>
                            </TableRow>
                            <TableRow>
                                <TableCell>
                                    <Paragraph>
                                        TemplateBinding
                                    </Paragraph>
                                </TableCell>
                                <TableCell>
                                    <Paragraph>
                                        используется в шаблонах для связывания свойства элемента внутри шаблона со свойством элемента, к которому применен шаблон
                                    </Paragraph>
                                </TableCell>
                            </TableRow>
                            <TableRow>
                                <TableCell>
                                    <Paragraph>
                                        PriorityBinding
                                    </Paragraph>
                                </TableCell>
                                <TableCell>
                                    <Paragraph>
                                        ранжирует список привязок и выбирает из них свойство (согласно приоритету) к которому будет применена привязка. Если привязка, имеющая наивысший приоритет успешно возвращает значение, то нет необходимости обрабатывать другие привязки в списке.
                                    </Paragraph>
                                </TableCell>
                            </TableRow>
                        </TableRowGroup>
                    </Table>
                </Section>
                <BlockUIContainer>
                    <StackPanel>
                        <TextBlock Text="Нажми на кнопку и ничего не произойдёт"/>
                        <Button Content="Кнопка для нажимания"/>
                    </StackPanel>
                </BlockUIContainer>
            </FlowDocument>
        </FlowDocumentScrollViewer>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button Width="100"  Content="Открыть" Click="Button_Click"/>
            <Button Width="100" Content="Сохранить" Click="Button_Click_1"/>
            <Button Width="100" Content="Очистить" Click="Button_Click_2"/>
        </StackPanel>



    </Grid>
</Window>
